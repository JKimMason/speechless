{"version":3,"file":"speechless.es5.js","sources":["../src/EventTarget.ts","../src/AbstractRecognition.ts","../src/NativeRecognition.ts","../node_modules/web-recorder/dist/webpack:/webpack/bootstrap 406f349166a8a60bef54","../node_modules/web-recorder/dist/webpack:/src/workers/recorder.worker.ts","../src/utils.ts","../src/ExternalRecognition.ts","../src/speechless.ts"],"sourcesContent":["export class EventTarget {\n  private eventTarget: DocumentFragment\n\n  constructor() {\n    this.eventTarget = document.createDocumentFragment()\n  }\n\n  addEventListener(type: string, listener: EventListener): void {\n    return this.eventTarget.addEventListener(type, listener)\n  }\n\n  removeEventListener(type: string, listener: EventListener): void {\n    return this.eventTarget.removeEventListener(type, listener)\n  }\n\n  dispatchEvent(event: Event): boolean {\n    return this.eventTarget.dispatchEvent(event)\n  }\n}\n","import { EventTarget } from './EventTarget'\n\nexport interface IRecognitionMap {\n  data: IRecognitionEvent\n  end: IRecognitionEvent\n  stop: IRecognitionEvent\n  start: IRecognitionEvent\n  fetching: IRecognitionEvent\n}\n\nexport interface IRecognitionEvent extends CustomEvent {\n  type: string\n  detail: string | undefined\n}\n\nexport interface IRecognitionEventListener extends EventListener {\n  (event?: IRecognitionEvent): any\n}\n\nexport interface IRecognition<T> {\n  setLang(lang: string): IRecognition<T>\n  listen(): void\n  stop(): void\n  addEventListener<K extends keyof IRecognitionMap>(\n    type: K,\n    listener: IRecognitionEventListener\n  ): void\n  removeEventListener<K extends keyof IRecognitionMap>(\n    type: K,\n    listener: IRecognitionEventListener\n  ): void\n  dispatchEvent(event: IRecognitionEvent): boolean\n}\n\nexport interface IWindow extends Window {\n  webkitSpeechRecognition: SpeechRecognitionStatic\n}\n\nexport abstract class AbstractRecognition<T> extends EventTarget\n  implements IRecognition<T> {\n  private state: T\n\n  constructor(private lang: string = 'en') {\n    super()\n  }\n\n  abstract listen(): void\n  abstract stop(): void\n\n  addEventListener<K extends keyof IRecognitionMap>(\n    type: K,\n    listener: IRecognitionEventListener\n  ): void {\n    return super.addEventListener(type, listener)\n  }\n\n  removeEventListener<K extends keyof IRecognitionMap>(\n    type: K,\n    listener: IRecognitionEventListener\n  ): void {\n    return super.removeEventListener(type, listener)\n  }\n\n  dispatchEvent(event: IRecognitionEvent): boolean {\n    return super.dispatchEvent(event)\n  }\n  setLang(lang: string): this {\n    this.lang = lang\n    return this\n  }\n  getLang(): string {\n    return this.lang\n  }\n  setState(state: T): this {\n    this.state = Object.assign({}, this.state, state)\n    return this\n  }\n  getState(): T {\n    return this.state\n  }\n}\n","import { AbstractRecognition, IWindow } from './AbstractRecognition'\n\nexport interface INativeRecognitionState {\n  value?: string\n  listening?: boolean\n  force?: boolean\n}\n\nexport class NativeRecognition extends AbstractRecognition<INativeRecognitionState> {\n  private speechRecognition: SpeechRecognition\n\n  constructor(lang?: string) {\n    super(lang) /* istanbul ignore next */\n    this.setState({\n      listening: false,\n      force: false,\n      value: ''\n    })\n    this.onSpeechRecognitionResult = this.onSpeechRecognitionResult.bind(this)\n    this.onSpeechRecognitionEnd = this.onSpeechRecognitionEnd.bind(this)\n    this.onSpeechRecognitionStart = this.onSpeechRecognitionStart.bind(this)\n    if (NativeRecognition.isSupported()) {\n      this.setup()\n    }\n    return this\n  }\n\n  static getSpeechRecognition(): SpeechRecognitionStatic {\n    const { webkitSpeechRecognition: SpeechRecognition }: IWindow = window as IWindow\n\n    return SpeechRecognition\n  }\n\n  static isSupported() {\n    return 'webkitSpeechRecognition' in window\n  }\n\n  listen(): NativeRecognition {\n    if (!NativeRecognition.isSupported()) {\n      throw new Error('NativeRecognition is not supported in your browser')\n    }\n    const { listening } = this.getState()\n    if (!listening) {\n      this.setState({\n        value: ''\n      })\n      this.speechRecognition.start()\n    }\n    return this\n  }\n\n  stop(): NativeRecognition {\n    if (!NativeRecognition.isSupported()) {\n      throw new Error('NativeRecognition is not supported in your browser')\n    }\n    const { listening } = this.getState()\n    if (listening) {\n      this.setState({\n        force: true\n      })\n      this.speechRecognition.stop()\n    }\n    return this\n  }\n\n  private setup(): this {\n    const SpeechRecognition = NativeRecognition.getSpeechRecognition()\n    this.speechRecognition = new SpeechRecognition()\n    this.speechRecognition.continuous = true\n    this.speechRecognition.interimResults = true\n    this.speechRecognition.lang = this.getLang()\n    this.speechRecognition.onresult = this.onSpeechRecognitionResult\n    this.speechRecognition.onend = this.onSpeechRecognitionEnd\n    this.speechRecognition.onstart = this.onSpeechRecognitionStart\n    return this\n  }\n\n  private onChange(interimTranscript: string) {\n    const { value } = this.getState()\n    this.setState({\n      value: interimTranscript\n    })\n    this.dispatchEvent(new CustomEvent('data', { detail: interimTranscript }))\n  }\n\n  private onFinal(finalTranscript: string) {\n    this.setState({\n      value: finalTranscript\n    })\n    this.speechRecognition.stop()\n  }\n\n  private onSpeechRecognitionStart() {\n    this.dispatchEvent(new CustomEvent('start'))\n\n    this.setState({\n      listening: true\n    })\n  }\n\n  private onSpeechRecognitionEnd() {\n    const { force, value } = this.getState()\n    this.setState({\n      listening: false\n    })\n    if (force) {\n      this.setState({\n        force: false\n      })\n      this.dispatchEvent(new CustomEvent('stop'))\n    } else {\n      this.dispatchEvent(new CustomEvent('data', { detail: value }))\n      this.dispatchEvent(new CustomEvent('end'))\n    }\n  }\n\n  private onSpeechRecognitionResult(event: SpeechRecognitionEvent) {\n    let interimTranscript = ''\n    let finalTranscript = ''\n    for (let i = event.resultIndex; i < event.results.length; ++i) {\n      if (event.results[i].isFinal) {\n        finalTranscript += event.results[i][0].transcript\n        this.onFinal(finalTranscript)\n      } else {\n        interimTranscript += event.results[i][0].transcript\n        this.onChange(interimTranscript)\n      }\n    }\n  }\n}\n"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 406f349166a8a60bef54","export interface IConfig {\n  sampleRate: number\n  numChannels: number\n}\n\nconst ctx: Worker = self as any\n\nlet recLength: number = 0\nlet recBuffers: Float32Array[][] = []\nlet sampleRate: number\nlet numChannels: number\n\nctx.onmessage = function(ev: MessageEvent) {\n  const { command, payload } = ev.data\n\n  switch (command) {\n    case 'init':\n      init(payload)\n      break\n    case 'record':\n      record(payload.buffer)\n      break\n    case 'exportWAV':\n      exportWAV(payload.type)\n      break\n    case 'getBuffer':\n      getBuffer()\n      break\n    case 'clear':\n      clear()\n      break\n  }\n}\n\nfunction init(config: any) {\n  sampleRate = config.sampleRate\n  numChannels = 1\n  initBuffers()\n}\n\nfunction record(inputBuffer: Float32Array[]) {\n  for (let channel = 0; channel < numChannels; channel++) {\n    recBuffers[channel].push(inputBuffer[channel])\n  }\n  recLength += inputBuffer[0].length\n}\n\nfunction exportWAV(type: string) {\n  let buffers = []\n  for (let channel = 0; channel < numChannels; channel++) {\n    buffers.push(mergeBuffers(recBuffers[channel], recLength))\n  }\n  let interleaved\n  if (numChannels === 2) {\n    interleaved = interleave(buffers[0], buffers[1])\n  } else {\n    interleaved = buffers[0]\n  }\n  let dataview = encodeWAV(interleaved)\n  let audioBlob = new Blob([dataview], { type: type })\n\n  ctx.postMessage({ command: 'exportWAV', payload: audioBlob })\n}\n\nfunction getBuffer() {\n  let buffers = []\n  for (let channel = 0; channel < numChannels; channel++) {\n    buffers.push(mergeBuffers(recBuffers[channel], recLength))\n  }\n  ctx.postMessage({ command: 'getBuffer', data: buffers })\n}\n\nfunction clear() {\n  recLength = 0\n  recBuffers = []\n  initBuffers()\n}\n\nfunction initBuffers() {\n  for (let channel = 0; channel < numChannels; channel++) {\n    recBuffers[channel] = []\n  }\n}\n\nfunction mergeBuffers(recBuffers: Float32Array[], recLength: number) {\n  let result = new Float32Array(recLength)\n  let offset = 0\n  for (let i = 0; i < recBuffers.length; i++) {\n    result.set(recBuffers[i], offset)\n    offset += recBuffers[i].length\n  }\n  return result\n}\n\nfunction interleave(inputL: Float32Array, inputR: Float32Array) {\n  let length = inputL.length + inputR.length\n  let result = new Float32Array(length)\n\n  let index = 0\n  let inputIndex = 0\n\n  while (index < length) {\n    result[index++] = inputL[inputIndex]\n    result[index++] = inputR[inputIndex]\n    inputIndex++\n  }\n  return result\n}\n\nfunction floatTo16BitPCM(\n  output: DataView,\n  offset: number,\n  input: Float32Array\n) {\n  for (let i = 0; i < input.length; i++, offset += 2) {\n    let s = Math.max(-1, Math.min(1, input[i]))\n    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7fff, true)\n  }\n}\n\nfunction writeString(view: DataView, offset: number, str: string) {\n  for (let i = 0; i < str.length; i++) {\n    view.setUint8(offset + i, str.charCodeAt(i))\n  }\n}\n\nfunction encodeWAV(samples: Float32Array) {\n  let buffer = new ArrayBuffer(44 + samples.length * 2)\n  let view = new DataView(buffer)\n\n  /* RIFF identifier */\n  writeString(view, 0, 'RIFF')\n  /* RIFF chunk length */\n  view.setUint32(4, 36 + samples.length * 2, true)\n  /* RIFF type */\n  writeString(view, 8, 'WAVE')\n  /* format chunk identifier */\n  writeString(view, 12, 'fmt ')\n  /* format chunk length */\n  view.setUint32(16, 16, true)\n  /* sample format (raw) */\n  view.setUint16(20, 1, true)\n  /* channel count */\n  view.setUint16(22, numChannels, true)\n  /* sample rate */\n  view.setUint32(24, sampleRate, true)\n  /* byte rate (sample rate * block align) */\n  view.setUint32(28, sampleRate * 4, true)\n  /* block align (channel count * bytes per sample) */\n  view.setUint16(32, numChannels * 2, true)\n  /* bits per sample */\n  view.setUint16(34, 16, true)\n  /* data chunk identifier */\n  writeString(view, 36, 'data')\n  /* data chunk length */\n  view.setUint32(40, samples.length * 2, true)\n\n  floatTo16BitPCM(view, 44, samples)\n\n  return view\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/workers/recorder.worker.ts","export function getNavigatorUserMedia(\n  constraints: MediaStreamConstraints,\n  successCallback: NavigatorUserMediaSuccessCallback,\n  errorCallback: NavigatorUserMediaErrorCallback\n): void {\n  const navigator = window.navigator\n  const navigatorAsAny = window.navigator as any\n  if (navigator.getUserMedia) {\n    navigator.getUserMedia(constraints, successCallback, errorCallback)\n  } else if (navigatorAsAny.webkitGetUserMedia) {\n    navigatorAsAny.webkitGetUserMedia(\n      constraints,\n      successCallback,\n      errorCallback\n    )\n  } else if (navigatorAsAny.mozGetUserMedia) {\n    navigatorAsAny.mozGetUserMedia(constraints, successCallback, errorCallback)\n  } else if (\n    navigatorAsAny.mediaDevices &&\n    navigatorAsAny.mediaDevices.getUserMedia\n  ) {\n    navigatorAsAny.mediaDevices.getUserMedia(\n      constraints,\n      successCallback,\n      errorCallback\n    )\n  } else {\n    throw new Error('no userMedia support')\n  }\n}\n","import { Recorder } from 'web-recorder'\n\nimport { AbstractRecognition } from './AbstractRecognition'\nimport { getNavigatorUserMedia } from './utils'\n\nexport interface IExternalRecognition extends AbstractRecognition<IExternalRecognitionState> {\n  recorder: Recorder\n  getRecorder(): Recorder\n}\n\nexport interface IExternalRecognitionState {\n  value?: any\n  listening?: boolean\n  fetching?: boolean\n}\n\nexport class ExternalRecognition extends AbstractRecognition<IExternalRecognitionState> {\n  public recorder: Recorder\n  private speechRecognition: SpeechRecognition\n  private audioContext: AudioContext\n  private stream: MediaStream\n\n  constructor(lang?: string, private remoteCall?: (blob?: Blob) => Promise<any>) {\n    super(lang) /* istanbul ignore next */\n    this.setState({\n      listening: false,\n      fetching: false,\n      value: null\n    })\n    this.onRecordingData = this.onRecordingData.bind(this)\n    this.onRecordingStart = this.onRecordingStart.bind(this)\n    this.onRecordingStop = this.onRecordingStop.bind(this)\n    this.onRemoteResult = this.onRemoteResult.bind(this)\n    this.onRecordingEnd = this.onRecordingEnd.bind(this)\n    this.onGotStream = this.onGotStream.bind(this)\n    return this\n  }\n\n  listen(): ExternalRecognition {\n    const { listening } = this.getState()\n    if (!listening) {\n      this.setState({\n        value: null\n      })\n      this.record()\n    }\n\n    return this\n  }\n\n  kill() {\n    this.recorder.abort()\n  }\n\n  stop(): ExternalRecognition {\n    const { listening } = this.getState()\n\n    if (listening) {\n      this.recorder.stop()\n    }\n    return this\n  }\n\n  getRecorder() {\n    return this.recorder\n  }\n\n  private record() {\n    getNavigatorUserMedia(\n      {\n        audio: {\n          advanced: [\n            {\n              echoCancelation: false\n            }\n          ]\n        }\n      },\n      this.onGotStream,\n      console.error\n    )\n  }\n\n  private onGotStream(stream: MediaStream) {\n    this.stream = stream\n    this.recorder = new Recorder(stream, {})\n    this.recorder.addEventListener('start', this.onRecordingStart)\n    this.recorder.addEventListener('end', this.onRecordingEnd)\n    this.recorder.addEventListener('stop', this.onRecordingStop)\n    this.recorder.addEventListener('data', this.onRecordingData)\n    this.recorder.start()\n  }\n\n  private onRecordingStart() {\n    this.dispatchEvent(new CustomEvent('start'))\n    this.setState({\n      listening: true\n    })\n  }\n  private onRecordingEnd() {\n    const { value } = this.getState()\n    this.setState({\n      listening: false\n    })\n    if (this.remoteCall) {\n      this.dispatchEvent(new CustomEvent('fetching'))\n      this.remoteCall(value).then(this.onRemoteResult)\n    }\n  }\n  private onRecordingStop(ev: Event) {\n    const { listening } = this.getState()\n    this.dispatchEvent(new CustomEvent('stop'))\n    this.setState({\n      listening: false\n    })\n  }\n\n  private onRecordingData(ev: Event): void\n  private onRecordingData(ev: CustomEvent): void {\n    this.setState({ fetching: true, value: ev.detail })\n  }\n\n  private onRemoteResult(res: any): void {\n    const { listening } = this.getState()\n    this.setState({ value: res, fetching: false })\n    this.dispatchEvent(new CustomEvent('data', { detail: res }))\n    this.dispatchEvent(new CustomEvent('end'))\n  }\n}\n","import { NativeRecognition } from './NativeRecognition'\nimport { ExternalRecognition } from './ExternalRecognition'\nimport { AbstractRecognition } from './AbstractRecognition'\n\nfunction Speechless(\n  lang?: string,\n  remoteCall?: (blob?: Blob) => Promise<any>\n): NativeRecognition | ExternalRecognition {\n  if (NativeRecognition.isSupported()) {\n    return new NativeRecognition(lang)\n  }\n  return new ExternalRecognition(lang, remoteCall)\n}\n\nexport { Speechless }\nexport { NativeRecognition } from './NativeRecognition'\nexport { ExternalRecognition } from './ExternalRecognition'\n"],"names":["__extends","name","__webpack_require__","n","getter","module","o","property","prototype","hasOwnProperty","call","object","exportWAV","type","buffers","channel","numChannels","recBuffers","interleaved","DataView","writeString","view","setUint32","setUint16","sampleRate","offset","input","max","min","output","s","inputL","inputR","length","index","inputIndex","Blob","dataview","ctx","payload","mergeBuffers","result","i","set","str","charCodeAt","recLength","ev","_a","command","initBuffers","inputBuffer","push","record","postMessage","getBuffer","Recorder"],"mappings":"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"}