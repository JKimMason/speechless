{
  "auto":
    "\n```\nimport React from \"react\";\nimport { Speechless } from \"speechless\";\n\nconst getRecognition = blob =>\n  toBase64(blob)\n    .then(base64data => base64data.substr(base64data.indexOf(',') + 1))\n    .then(remoteCall)\n    .then(res => res.json())\n    .then(res => {\n      if (!res || isEmpty(res)) {\n        return ''\n      }\n      return res.results[0].alternatives[0].transcript\n    })\n\nclass RecognitionInput extends React.PureComponent {\n  state = {\n    data: \"\",\n    fetching: false,\n    listening: false,\n  };\n  constructor(props){\n    super(props)\n    const recognition = Speechless(\"en\", getRecognition)\n    recognition.addEventListener(\"start\", this.onStart); \n    recognition.addEventListener(\"fetching\", this.onFetching);\n    recognition.addEventListener(\"data\", this.onData);\n    recognition.addEventListener(\"end\", this.onEnd);\n  }\n  onListen = () => {\n    const { recognition } = this.props\n    recognition.listen();\n  };\n  onFetching = e => {\n    this.setState({ fetching: true, listening: false });\n  };\n  onStart = e => {\n    this.setState({ listening: true });\n  };\n  onEnd = e => {\n    this.setState({ fetching: false, listening: false });\n  };\n  onData = e => {\n    this.setState({ data: e.detail });\n  };\n  renderButton() {\n    const { fetching, listening } = this.state;\n    if (fetching) {\n      return <img src={loader} alt=\"fetching\" />;\n    }\n    if (listening) {\n      return <img src={recording} alt=\"recording\" />;\n    }\n    return <img src={mic} alt=\"mic\" />;\n  }\n  render() {\n    const { data, fetching } = this.state;\n    return (\n      <div className=\"Input row\">\n          <input \n            disabled \n            placeholder=\"press the mic...\" \n            name=\"msg\" type=\"text\" \n            value={data} />\n          <button \n            disabled={fetching} \n            type=\"button\" \n            onClick={this.onListen}>\n            {this.renderButton()}\n          </button>\n      </div>\n    );\n  }\n}\n```\n",
  "external":
    "\n\n```\n...\nimport { ExternalRecognition } from \"speechless\";\n\nclass RecognitionInput extends React.PureComponent {\n  ...\n  constructor(props){\n    super(props)\n    const recognition = new ExternalRecognition(\"en\", getRecognition)\n    recognition.addEventListener(\"start\", this.onStart); \n    recognition.addEventListener(\"fetching\", this.onFetching);\n    recognition.addEventListener(\"data\", this.onData);\n    recognition.addEventListener(\"end\", this.onEnd);\n  }\n  ...\n}\n\n```\n",
  "native":
    "\n```\n...\nimport { NativeRecognition } from \"speechless\";\n\nclass RecognitionInput extends React.PureComponent {\n  ...\n  constructor(props){\n    super(props)\n    const recognition = new NativeRecognition(\"en\")\n    recognition.addEventListener(\"start\", this.onStart); \n    recognition.addEventListener(\"data\", this.onData);\n    recognition.addEventListener(\"end\", this.onEnd);\n  }\n  ...\n}\n```\n"
}
